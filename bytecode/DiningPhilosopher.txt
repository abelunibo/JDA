Classfile /Users/andrea/Documents/workspace/bytecodedeadlockanalysis/bin/com/laneve/test/DiningPhilosopher.class
  Last modified 30-mag-2015; size 2570 bytes
  MD5 checksum d2450672bb3dcde1a4b4d3eb74b357e3
  Compiled from "DiningPhilosopher.java"
public class com.laneve.test.DiningPhilosopher extends java.lang.Thread
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Class              #2            // com/laneve/test/DiningPhilosopher
    #2 = Utf8               com/laneve/test/DiningPhilosopher
    #3 = Class              #4            // java/lang/Thread
    #4 = Utf8               java/lang/Thread
    #5 = Utf8               number
    #6 = Utf8               I
    #7 = Utf8               left
    #8 = Utf8               Lcom/laneve/test/Fork;
    #9 = Utf8               right
   #10 = Utf8               random
   #11 = Utf8               Ljava/util/Random;
   #12 = Utf8               <clinit>
   #13 = Utf8               ()V
   #14 = Utf8               Code
   #15 = Class              #16           // java/util/Random
   #16 = Utf8               java/util/Random
   #17 = Methodref          #15.#18       // java/util/Random."<init>":()V
   #18 = NameAndType        #19:#13       // "<init>":()V
   #19 = Utf8               <init>
   #20 = Fieldref           #1.#21        // com/laneve/test/DiningPhilosopher.random:Ljava/util/Random;
   #21 = NameAndType        #10:#11       // random:Ljava/util/Random;
   #22 = Utf8               LineNumberTable
   #23 = Utf8               LocalVariableTable
   #24 = Utf8               (ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
   #25 = Methodref          #3.#18        // java/lang/Thread."<init>":()V
   #26 = Fieldref           #1.#27        // com/laneve/test/DiningPhilosopher.number:I
   #27 = NameAndType        #5:#6         // number:I
   #28 = Fieldref           #1.#29        // com/laneve/test/DiningPhilosopher.left:Lcom/laneve/test/Fork;
   #29 = NameAndType        #7:#8         // left:Lcom/laneve/test/Fork;
   #30 = Fieldref           #1.#31        // com/laneve/test/DiningPhilosopher.right:Lcom/laneve/test/Fork;
   #31 = NameAndType        #9:#8         // right:Lcom/laneve/test/Fork;
   #32 = Utf8               this
   #33 = Utf8               Lcom/laneve/test/DiningPhilosopher;
   #34 = Utf8               toString
   #35 = Utf8               ()Ljava/lang/String;
   #36 = Class              #37           // java/lang/StringBuilder
   #37 = Utf8               java/lang/StringBuilder
   #38 = String             #39           // Fil no.
   #39 = Utf8               Fil no.
   #40 = Methodref          #36.#41       // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
   #41 = NameAndType        #19:#42       // "<init>":(Ljava/lang/String;)V
   #42 = Utf8               (Ljava/lang/String;)V
   #43 = Methodref          #36.#44       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #44 = NameAndType        #45:#46       // append:(I)Ljava/lang/StringBuilder;
   #45 = Utf8               append
   #46 = Utf8               (I)Ljava/lang/StringBuilder;
   #47 = Methodref          #36.#48       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #48 = NameAndType        #34:#35       // toString:()Ljava/lang/String;
   #49 = Utf8               think
   #50 = Fieldref           #51.#53       // java/lang/System.out:Ljava/io/PrintStream;
   #51 = Class              #52           // java/lang/System
   #52 = Utf8               java/lang/System
   #53 = NameAndType        #54:#55       // out:Ljava/io/PrintStream;
   #54 = Utf8               out
   #55 = Utf8               Ljava/io/PrintStream;
   #56 = Methodref          #1.#48        // com/laneve/test/DiningPhilosopher.toString:()Ljava/lang/String;
   #57 = Methodref          #58.#60       // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #58 = Class              #59           // java/lang/String
   #59 = Utf8               java/lang/String
   #60 = NameAndType        #61:#62       // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #61 = Utf8               valueOf
   #62 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #63 = String             #64           //  is thinking
   #64 = Utf8                is thinking
   #65 = Methodref          #36.#66       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #66 = NameAndType        #45:#67       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #68 = Methodref          #69.#71       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #69 = Class              #70           // java/io/PrintStream
   #70 = Utf8               java/io/PrintStream
   #71 = NameAndType        #72:#42       // println:(Ljava/lang/String;)V
   #72 = Utf8               println
   #73 = Methodref          #15.#74       // java/util/Random.nextFloat:()F
   #74 = NameAndType        #75:#76       // nextFloat:()F
   #75 = Utf8               nextFloat
   #76 = Utf8               ()F
   #77 = Long               1000l
   #79 = Methodref          #3.#80        // java/lang/Thread.sleep:(J)V
   #80 = NameAndType        #81:#82       // sleep:(J)V
   #81 = Utf8               sleep
   #82 = Utf8               (J)V
   #83 = Methodref          #84.#86       // java/lang/InterruptedException.printStackTrace:()V
   #84 = Class              #85           // java/lang/InterruptedException
   #85 = Utf8               java/lang/InterruptedException
   #86 = NameAndType        #87:#13       // printStackTrace:()V
   #87 = Utf8               printStackTrace
   #88 = Utf8               e
   #89 = Utf8               Ljava/lang/InterruptedException;
   #90 = Utf8               StackMapTable
   #91 = Utf8               eat
   #92 = Methodref          #36.#18       // java/lang/StringBuilder."<init>":()V
   #93 = Methodref          #36.#94       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #94 = NameAndType        #45:#95       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #95 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #96 = String             #97           //  takes left fork no.
   #97 = Utf8                takes left fork no.
   #98 = Methodref          #99.#101      // com/laneve/test/Fork.getNumber:()I
   #99 = Class              #100          // com/laneve/test/Fork
  #100 = Utf8               com/laneve/test/Fork
  #101 = NameAndType        #102:#103     // getNumber:()I
  #102 = Utf8               getNumber
  #103 = Utf8               ()I
  #104 = String             #105          //  takes right fork no.
  #105 = Utf8                takes right fork no.
  #106 = String             #107          //  is eating
  #107 = Utf8                is eating
  #108 = Class              #109          // java/lang/Throwable
  #109 = Utf8               java/lang/Throwable
  #110 = Utf8               run
  #111 = Methodref          #1.#112       // com/laneve/test/DiningPhilosopher.think:()V
  #112 = NameAndType        #49:#13       // think:()V
  #113 = Methodref          #1.#114       // com/laneve/test/DiningPhilosopher.eat:()V
  #114 = NameAndType        #91:#13       // eat:()V
  #115 = Methodref          #1.#116       // com/laneve/test/DiningPhilosopher.run:()V
  #116 = NameAndType        #110:#13      // run:()V
  #117 = Utf8               main
  #118 = Utf8               ([Ljava/lang/String;)V
  #119 = Methodref          #99.#120      // com/laneve/test/Fork."<init>":(I)V
  #120 = NameAndType        #19:#121      // "<init>":(I)V
  #121 = Utf8               (I)V
  #122 = Methodref          #1.#123       // com/laneve/test/DiningPhilosopher."<init>":(ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
  #123 = NameAndType        #19:#24       // "<init>":(ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
  #124 = Methodref          #1.#125       // com/laneve/test/DiningPhilosopher.start:()V
  #125 = NameAndType        #126:#13      // start:()V
  #126 = Utf8               start
  #127 = Utf8               args
  #128 = Utf8               [Ljava/lang/String;
  #129 = Utf8               f0
  #130 = Utf8               f1
  #131 = Utf8               f2
  #132 = Utf8               d1
  #133 = Utf8               d2
  #134 = Utf8               d3
  #135 = Utf8               SourceFile
  #136 = Utf8               DiningPhilosopher.java
{
  private int number;
    descriptor: I
    flags: ACC_PRIVATE

  private com.laneve.test.Fork left;
    descriptor: Lcom/laneve/test/Fork;
    flags: ACC_PRIVATE

  private com.laneve.test.Fork right;
    descriptor: Lcom/laneve/test/Fork;
    flags: ACC_PRIVATE

  private static java.util.Random random;
    descriptor: Ljava/util/Random;
    flags: ACC_PRIVATE, ACC_STATIC

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #15                 // class java/util/Random
         3: dup
         4: invokespecial #17                 // Method java/util/Random."<init>":()V
         7: putstatic     #20                 // Field random:Ljava/util/Random;
        10: return
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature

  public com.laneve.test.DiningPhilosopher(int, com.laneve.test.Fork, com.laneve.test.Fork);
    descriptor: (ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #25                 // Method java/lang/Thread."<init>":()V
         4: aload_0
         5: iload_1
         6: putfield      #26                 // Field number:I
         9: aload_0
        10: aload_2
        11: putfield      #28                 // Field left:Lcom/laneve/test/Fork;
        14: aload_0
        15: aload_3
        16: putfield      #30                 // Field right:Lcom/laneve/test/Fork;
        19: return
      LineNumberTable:
        line 13: 0
        line 14: 4
        line 15: 9
        line 16: 14
        line 17: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcom/laneve/test/DiningPhilosopher;
            0      20     1 number   I
            0      20     2  left   Lcom/laneve/test/Fork;
            0      20     3 right   Lcom/laneve/test/Fork;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #36                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #38                 // String Fil no.
         6: invokespecial #40                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: aload_0
        10: getfield      #26                 // Field number:I
        13: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        16: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        19: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcom/laneve/test/DiningPhilosopher;

  private void think();
    descriptor: ()V
    flags: ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #50                 // Field java/lang/System.out:Ljava/io/PrintStream;
         3: new           #36                 // class java/lang/StringBuilder
         6: dup
         7: aload_0
         8: invokevirtual #56                 // Method toString:()Ljava/lang/String;
        11: invokestatic  #57                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        14: invokespecial #40                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        17: ldc           #63                 // String  is thinking
        19: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        25: invokevirtual #68                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        28: getstatic     #20                 // Field random:Ljava/util/Random;
        31: invokevirtual #73                 // Method java/util/Random.nextFloat:()F
        34: f2l
        35: ldc2_w        #77                 // long 1000l
        38: lmul
        39: invokestatic  #79                 // Method java/lang/Thread.sleep:(J)V
        42: goto          50
        45: astore_1
        46: aload_1
        47: invokevirtual #83                 // Method java/lang/InterruptedException.printStackTrace:()V
        50: return
      Exception table:
         from    to  target type
            28    42    45   Class java/lang/InterruptedException
      LineNumberTable:
        line 24: 0
        line 27: 28
        line 28: 42
        line 29: 46
        line 31: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lcom/laneve/test/DiningPhilosopher;
           46       4     1     e   Ljava/lang/InterruptedException;
      StackMapTable: number_of_entries = 2
        frame_type = 109 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
        frame_type = 4 /* same */

  private void eat();
    descriptor: ()V
    flags: ACC_PRIVATE
    Code:
      stack=4, locals=4, args_size=1
         0: getstatic     #50                 // Field java/lang/System.out:Ljava/io/PrintStream;
         3: new           #36                 // class java/lang/StringBuilder
         6: dup
         7: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
        10: aload_0
        11: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        14: ldc           #96                 // String  takes left fork no.
        16: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: aload_0
        20: getfield      #28                 // Field left:Lcom/laneve/test/Fork;
        23: invokevirtual #98                 // Method com/laneve/test/Fork.getNumber:()I
        26: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        29: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokevirtual #68                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        35: aload_0
        36: getfield      #28                 // Field left:Lcom/laneve/test/Fork;
        39: dup
        40: astore_1
        41: monitorenter
        42: getstatic     #50                 // Field java/lang/System.out:Ljava/io/PrintStream;
        45: new           #36                 // class java/lang/StringBuilder
        48: dup
        49: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
        52: aload_0
        53: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        56: ldc           #104                // String  takes right fork no.
        58: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        61: aload_0
        62: getfield      #30                 // Field right:Lcom/laneve/test/Fork;
        65: invokevirtual #98                 // Method com/laneve/test/Fork.getNumber:()I
        68: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        71: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        74: invokevirtual #68                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        77: aload_0
        78: getfield      #30                 // Field right:Lcom/laneve/test/Fork;
        81: dup
        82: astore_2
        83: monitorenter
        84: getstatic     #50                 // Field java/lang/System.out:Ljava/io/PrintStream;
        87: new           #36                 // class java/lang/StringBuilder
        90: dup
        91: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
        94: aload_0
        95: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        98: ldc           #106                // String  is eating
       100: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       103: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       106: invokevirtual #68                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       109: getstatic     #20                 // Field random:Ljava/util/Random;
       112: invokevirtual #73                 // Method java/util/Random.nextFloat:()F
       115: f2l
       116: ldc2_w        #77                 // long 1000l
       119: lmul
       120: invokestatic  #79                 // Method java/lang/Thread.sleep:(J)V
       123: goto          131
       126: astore_3
       127: aload_3
       128: invokevirtual #83                 // Method java/lang/InterruptedException.printStackTrace:()V
       131: aload_2
       132: monitorexit
       133: goto          139
       136: aload_2
       137: monitorexit
       138: athrow
       139: aload_1
       140: monitorexit
       141: goto          147
       144: aload_1
       145: monitorexit
       146: athrow
       147: return
      Exception table:
         from    to  target type
           109   123   126   Class java/lang/InterruptedException
            84   133   136   any
           136   138   136   any
            42   141   144   any
           144   146   144   any
      LineNumberTable:
        line 34: 0
        line 35: 35
        line 36: 42
        line 37: 77
        line 38: 84
        line 40: 109
        line 41: 123
        line 42: 127
        line 37: 131
        line 35: 139
        line 46: 147
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     148     0  this   Lcom/laneve/test/DiningPhilosopher;
          127       4     3     e   Ljava/lang/InterruptedException;
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 126
          locals = [ class com/laneve/test/DiningPhilosopher, class com/laneve/test/Fork, class com/laneve/test/Fork ]
          stack = [ class java/lang/InterruptedException ]
        frame_type = 4 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 2

  public void run();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #111                // Method think:()V
         4: aload_0
         5: invokespecial #113                // Method eat:()V
         8: aload_0
         9: invokevirtual #115                // Method run:()V
        12: return
      LineNumberTable:
        line 49: 0
        line 50: 4
        line 51: 8
        line 52: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/laneve/test/DiningPhilosopher;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=7, args_size=1
         0: new           #99                 // class com/laneve/test/Fork
         3: dup
         4: iconst_0
         5: invokespecial #119                // Method com/laneve/test/Fork."<init>":(I)V
         8: astore_1
         9: new           #99                 // class com/laneve/test/Fork
        12: dup
        13: iconst_1
        14: invokespecial #119                // Method com/laneve/test/Fork."<init>":(I)V
        17: astore_2
        18: new           #99                 // class com/laneve/test/Fork
        21: dup
        22: iconst_2
        23: invokespecial #119                // Method com/laneve/test/Fork."<init>":(I)V
        26: astore_3
        27: new           #1                  // class com/laneve/test/DiningPhilosopher
        30: dup
        31: iconst_0
        32: aload_1
        33: aload_3
        34: invokespecial #122                // Method "<init>":(ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
        37: astore        4
        39: new           #1                  // class com/laneve/test/DiningPhilosopher
        42: dup
        43: iconst_1
        44: aload_2
        45: aload_1
        46: invokespecial #122                // Method "<init>":(ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
        49: astore        5
        51: new           #1                  // class com/laneve/test/DiningPhilosopher
        54: dup
        55: iconst_2
        56: aload_3
        57: aload_2
        58: invokespecial #122                // Method "<init>":(ILcom/laneve/test/Fork;Lcom/laneve/test/Fork;)V
        61: astore        6
        63: aload         4
        65: invokevirtual #124                // Method start:()V
        68: aload         5
        70: invokevirtual #124                // Method start:()V
        73: aload         6
        75: invokevirtual #124                // Method start:()V
        78: return
      LineNumberTable:
        line 56: 0
        line 57: 9
        line 58: 18
        line 60: 27
        line 62: 39
        line 63: 51
        line 65: 63
        line 66: 68
        line 67: 73
        line 69: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0  args   [Ljava/lang/String;
            9      70     1    f0   Lcom/laneve/test/Fork;
           18      61     2    f1   Lcom/laneve/test/Fork;
           27      52     3    f2   Lcom/laneve/test/Fork;
           39      40     4    d1   Lcom/laneve/test/DiningPhilosopher;
           51      28     5    d2   Lcom/laneve/test/DiningPhilosopher;
           63      16     6    d3   Lcom/laneve/test/DiningPhilosopher;
}
SourceFile: "DiningPhilosopher.java"
